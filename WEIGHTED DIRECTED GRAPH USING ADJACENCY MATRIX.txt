
WEIGHTED DIRECTED GRAPH USING ADJACENCY MATRIX:


def addNode(v):
    global nodecount
    if v in nodes:
        print(v,"already present")
    else:
        nodes.append(v)
        nodecount+=1
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(nodecount):
            temp.append(0)
        graph.append(temp)
def addEdge(node1,node2,weight):
    if node1 not in nodes:
        print("node1 not avilable")
    elif node2 not in nodes:
        print("node2 not available")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=weight
        #graph[j][i]=weight
def show():
    for i in range(nodecount):
        for j in range(nodecount):
            print(graph[i][j],end=" ")
        print()
nodes=[]
graph=[]
nodecount=0
while True:
    print()
    print("1.add node\n2.add edge\n3.print list\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addNode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        weight=int(input("enter weight"))
        addEdge(node1,node2,weight)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
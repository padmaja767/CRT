SEARCHING A NODE IN BST:



class Node:
    def __init__(self,x):
        self.data=x
        self.left=None
        self.right=None
    def insert(self,x):
        if self.data == None:
            self.data=x
            return
        if self.data>x:
            if self.left==None:
                self.left=Node(x)
            else:
                self.left.insert(x)
        else:
            if self.right ==None:
                self.right=Node(x)
            else:
                self.right.insert(x)
    def show(self):
        if self.left:
            self.left.show()
        print(self.data,end=" ")
        if self.right:
            self.right.show()
    def search(self,sno):
        if self.data==sno:
            print("found")
            return
        if self.data>sno:
            if self.left:
                self.left.search(sno)
            else:
                print("not found")
        else:
            if self.right:
                self.right.search(sno)
            else:
                print("not found")
            
root = Node(40)
while True:
    print()
    print("1.insert\n2.show\n3.search\n4.exit")
    ch=int(input("enter choice"))
    if ch==1:
        x = int(input("enter element"))
        root.insert(x)
    elif ch==2:
        root.show()
    elif ch==3:
        sno=int(input("enter search element"))
        root.search(sno)
    elif ch==4:
        break
    else:
        print("invalid choice")